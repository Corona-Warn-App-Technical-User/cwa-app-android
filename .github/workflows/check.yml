name: Check

on:
  push:
    branches:
    - feature/13058-GitHub-Actions    
    
env:
  total-test-runners: 4

jobs:
  dependencies:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.14.1/sapmachine-jdk-11.0.14.1_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-11.tar.gz" "${download_url}"
       
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-11.tar.gz
        java-version: '11.0.14'
        architecture: x64    
        cache: 'gradle'

    - uses: maxim-lobanov/setup-android-tools@v1
      with:
        cache: true       
        
  detekt:      
    runs-on: ubuntu-latest
    needs: dependencies
   
    steps:
    - uses: actions/checkout@v3
    
    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.14.1/sapmachine-jdk-11.0.14.1_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-11.tar.gz" "${download_url}"
       
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-11.tar.gz
        java-version: '11.0.14'
        architecture: x64    
        cache: 'gradle'

    - uses: maxim-lobanov/setup-android-tools@v1
      with:
        cache: true
        
    - name: Corona-Warn-App:detekt
      env:
        JVM_OPTS: -Xmx4096m
        GRADLE_OPTS: |
              -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError
              -Dorg.gradle.caching=true
              -Dorg.gradle.configureondemand=true
              -Dkotlin.compiler.execution.strategy=in-process
              -Dkotlin.incremental=false
      run: ./gradlew -PdisablePreDex :Corona-Warn-App:detekt

    - name: Archive detekt report
      uses: actions/upload-artifact@v3.0.0
      with:
        name: detekt-${{ github.sha }}
        path: Corona-Warn-App/build/reports  
        
        
  klint:      
    runs-on: ubuntu-latest
    needs: dependencies
   
    steps:
    - uses: actions/checkout@v3
    
    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.14.1/sapmachine-jdk-11.0.14.1_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-11.tar.gz" "${download_url}"
       
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-11.tar.gz
        java-version: '11.0.14'
        architecture: x64    
        cache: 'gradle'

    - uses: maxim-lobanov/setup-android-tools@v1
      with:
        cache: true
        
    - name: Corona-Warn-App:ktlintCheck
      env:
        JVM_OPTS: -Xmx4096m
        GRADLE_OPTS: |
              -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError
              -Dorg.gradle.caching=true
              -Dorg.gradle.configureondemand=true
              -Dkotlin.compiler.execution.strategy=in-process
              -Dkotlin.incremental=false
      run: ./gradlew -PdisablePreDex :Corona-Warn-App:ktlintCheck

    - name: Archive detekt report
      uses: actions/upload-artifact@v3.0.0
      with:
        name: klint-${{ github.sha }}
        path: Corona-Warn-App/build/reports          
      
  lint_device_release_check:      
    runs-on: ubuntu-latest
    needs: dependencies
   
    steps:
    - uses: actions/checkout@v3
    
    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.14.1/sapmachine-jdk-11.0.14.1_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-11.tar.gz" "${download_url}"
       
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-11.tar.gz
        java-version: '11.0.14'
        architecture: x64    
        cache: 'gradle'

    - uses: maxim-lobanov/setup-android-tools@v1
      with:
        cache: true
        
    - name: Corona-Warn-App:lintDeviceRelease
      env:
        JVM_OPTS: -Xmx4096m
        GRADLE_OPTS: |
              -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError
              -Dorg.gradle.caching=true
              -Dorg.gradle.configureondemand=true
              -Dkotlin.compiler.execution.strategy=in-process
              -Dkotlin.incremental=false
      run: ./gradlew -PdisablePreDex :Corona-Warn-App:lintDeviceRelease -i

    - name: Archive detekt report
      uses: actions/upload-artifact@v3.0.0
      with:
        name: lintDeviceRelease-${{ github.sha }}
        path: Corona-Warn-App/build/reports  

  lint_device_for_testers_release_check:      
    runs-on: ubuntu-latest
    needs: dependencies
   
    steps:
    - uses: actions/checkout@v3
    
    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.14.1/sapmachine-jdk-11.0.14.1_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-11.tar.gz" "${download_url}"
       
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-11.tar.gz
        java-version: '11.0.14'
        architecture: x64    
        cache: 'gradle'

    - uses: maxim-lobanov/setup-android-tools@v1
      with:
        cache: true
        
    - name: Corona-Warn-App:lintDeviceForTestersRelease
      env:
        JVM_OPTS: -Xmx4096m
        GRADLE_OPTS: |
              -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError
              -Dorg.gradle.caching=true
              -Dorg.gradle.configureondemand=true
              -Dkotlin.compiler.execution.strategy=in-process
              -Dkotlin.incremental=false
      run: ./gradlew -PdisablePreDex :Corona-Warn-App:lintDeviceForTestersRelease -i

    - name: Archive detekt report
      uses: actions/upload-artifact@v3.0.0
      with:
        name: lintDeviceForTesters-${{ github.sha }}
        path: Corona-Warn-App/build/reports  

  quick_build_device_release_no_tests:
    runs-on: ubuntu-latest
    needs: dependencies

    steps:
    - uses: actions/checkout@v3
    
    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.14.1/sapmachine-jdk-11.0.14.1_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-11.tar.gz" "${download_url}"
          
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-11.tar.gz
        java-version: '11.0.14'
        architecture: x64    
        cache: 'gradle'

    - uses: maxim-lobanov/setup-android-tools@v1
      with:
        cache: true
    
    - name: Quick Build
      env:
        JVM_OPTS: -Xmx4096m
        GRADLE_OPTS: |
              -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError
              -Dorg.gradle.caching=true
              -Dorg.gradle.configureondemand=true
              -Dkotlin.compiler.execution.strategy=in-process
              -Dkotlin.incremental=false
      run: ./gradlew -PdisablePreDex assembleDeviceRelease
        
  quick_build_device_for_testers_release_no_tests:
    runs-on: ubuntu-latest
    needs: dependencies

    steps:
    - uses: actions/checkout@v3

    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.14.1/sapmachine-jdk-11.0.14.1_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-11.tar.gz" "${download_url}"
        
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-11.tar.gz
        java-version: '11.0.14'
        architecture: x64    
        cache: 'gradle'

    - uses: maxim-lobanov/setup-android-tools@v1
      with:
        cache: true
    
    - name: Quick Build
      env:
        JVM_OPTS: -Xmx4096m
        GRADLE_OPTS: |
              -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError
              -Dorg.gradle.caching=true
              -Dorg.gradle.configureondemand=true
              -Dkotlin.compiler.execution.strategy=in-process
              -Dkotlin.incremental=false
      run: ./gradlew -PdisablePreDex :Corona-Warn-App:assembleDeviceForTestersRelease
    
    
  unit-test-runner-indexes:
    runs-on: ubuntu-latest
    name: Generate unit test runner indexes
    outputs:
      json: ${{ steps.generate-index-list.outputs.json }}
    steps:
      - id: generate-index-list
        run: |
          MAX_INDEX=$((${{ env.total-test-runners }}-1))
          INDEX_LIST=$(seq 0 ${MAX_INDEX})
          INDEX_JSON=$(jq --null-input --compact-output '. |= [inputs]' <<< ${INDEX_LIST})
          echo "::set-output name=json::${INDEX_JSON}"
          
  unit_tests_device_release:
    name: "Runner #${{ matrix.runner-index }}: Run test suite in parallel"
    runs-on: ubuntu-latest
    needs:
      - dependencies
      - unit-test-runner-indexes
    strategy:
      matrix:
        runner-index: ${{ fromJSON(needs.unit-test-runner-indexes.outputs.json) }}
    steps:
    - uses: actions/checkout@v3

    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.14.1/sapmachine-jdk-11.0.14.1_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-11.tar.gz" "${download_url}"
        
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-11.tar.gz
        java-version: '11.0.14'
        architecture: x64    
        cache: 'gradle'

    - uses: maxim-lobanov/setup-android-tools@v1
      with:
        cache: true

    - uses: chaosaffe/split-tests@v1-alpha.1
      id: split-tests
      name: Split tests
      with:
        glob: "**/test*/**/*.kt"
        split-total: ${{ env.total-runners }}
        split-index: ${{ matrix.runner-index }}    
    
    - name: Quick Build
      env:
        JVM_OPTS: -Xmx4096m
        GRADLE_OPTS: |
              -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError
              -Dorg.gradle.caching=true
              -Dorg.gradle.configureondemand=true
              -Dkotlin.compiler.execution.strategy=in-process
              -Dkotlin.incremental=false
      run: ./gradlew -PdisablePreDex :Corona-Warn-App:testDeviceReleaseUnitTest -i -PtestFilter={{ steps.split-tests.outputs.test-suite }}
      
    - name: Archive Test Result
      uses: actions/upload-artifact@v3.0.0
      with:
        name: UnitTestResults-DeviceRelease-${{ github.sha }}
        path: Corona-Warn-App/build/test-results
